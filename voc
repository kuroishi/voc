#!/usr/bin/env perl

use strict;
use warnings;
use v5.10;

use Getopt::Long;

sub usage {
    print STDERR
"USAGE:\n",
"    voc [-a|--alc][-d|--dic][-s|--skell][-h|--help] WORD_OR_PHRASE\n",
"        default: alc\n"
;
    exit 1;
}

my $alc = 1;
my $dic = 0;
my $skell = 0;
GetOptions(
    "a|alc"   => sub { $alc = 1; $dic = 0; $skell = 0; },
    "d|dic"   => sub { $alc = 0; $dic = 1; $skell = 0; },
    "s|skell" => sub { $alc = 0; $dic = 0; $skell = 1; },
    "h|help"  => sub { usage(); exit 1; })
or die("Error in command line arguments\n");

my $ret;
$ret = `uname`;
unless ($ret =~ /Darwin/) {
    print STDERR "not implemented on your platform\n";
    exit 1;
}

unless (defined($ARGV[0])) {
    usage();
    exit 1;
}

my $qs = join("%20", @ARGV);

if ($alc) {
    my $str = sprintf("https://eow.alc.co.jp/search?q=%s", $qs);
    $ret = `open $str`;
}

if ($dic) {
    my $str = sprintf("dict://%s", $qs);
    $ret = `open $str`;
}

if ($skell) {
    my $str = sprintf('https://skell.sketchengine.eu/#result?lang=en\&f=concordance\&query=%s', $qs);
    $ret = `open $str`;
}

exit 0;

__END__
